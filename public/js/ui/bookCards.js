// public/js/ui/bookCards.js

import { showDetailModal } from './modals.js';

// –ü–æ–ª—É—á–∞–µ–º –≥–ª–∞–≤–Ω—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –∫–Ω–∏–≥ –æ–¥–∏–Ω —Ä–∞–∑ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –º–æ–¥—É–ª—è
const bookListContainer = document.getElementById('book-list-container');

/**
 * –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∫–Ω–∏–≥ –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ.
 * @param {Array} booksToRender - –ú–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤ –∫–Ω–∏–≥ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è.
 * @param {string} listType - –¢–∏–ø —Å–ø–∏—Å–∫–∞ ('library' –∏–ª–∏ 'wishlist').
 * @param {boolean} append - –ï—Å–ª–∏ true, –∫–Ω–∏–≥–∏ –¥–æ–±–∞–≤–ª—è—é—Ç—Å—è –≤ –∫–æ–Ω–µ—Ü —Å–ø–∏—Å–∫–∞, –∏–Ω–∞—á–µ - —Å–ø–∏—Å–æ–∫ –æ—á–∏—â–∞–µ—Ç—Å—è.
 */
export function renderBooks(booksToRender, listType, append = false) {
    // –ï—Å–ª–∏ —Ñ–ª–∞–≥ append —Ä–∞–≤–µ–Ω false, –æ—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä. –ò–Ω–∞—á–µ - –æ—Å—Ç–∞–≤–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –∫–Ω–∏–≥–∏.
    if (!append) {
        bookListContainer.innerHTML = '';
    }

    // –ï—Å–ª–∏ –ø–æ—Å–ª–µ –≤—Å–µ—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤ –∫–Ω–∏–≥ –Ω–µ –æ—Å—Ç–∞–ª–æ—Å—å –∏ –º—ã –Ω–µ –¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä.
    if (booksToRender.length === 0 && !append) {
        bookListContainer.innerHTML =
            '<p class="placeholder">–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.</p>';
        return;
    }

    booksToRender.forEach((book) => {
        const bookCard = document.createElement('div');
        bookCard.className = 'book-card';
        bookCard.dataset.bookId = book.id;
        bookCard.dataset.listType = listType;

        const locationIcon = book.location === 'work' ? 'üíº' : 'üè†';
        // –ó–Ω–∞—á–æ–∫ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –¥–ª—è —Ñ–∏–∑–∏—á–µ—Å–∫–∏—Ö –∫–Ω–∏–≥
        const locationBadge =
            book.format === 'physical'
                ? `<div class="book-card-location" title="–ù–∞—Ö–æ–¥–∏—Ç—Å—è: ${
                      book.location === 'work' ? '–ù–∞ —Ä–∞–±–æ—Ç–µ' : '–î–æ–º–∞'
                  }">${locationIcon}</div>`
                : '';

        // –£—Å–ª–æ–≤–∏–µ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ–±–ª–æ–∂–∫–∏ –∏–ª–∏ –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä–∞ –¥–ª—è —Ü–∏—Ñ—Ä–æ–≤—ã—Ö –∫–Ω–∏–≥
        let coverHtml = '';
        if (book.format === 'digital') {
            coverHtml = `<div class="book-cover-placeholder"><h3>${book.title}</h3></div>`;
        } else {
            coverHtml = `<img src="${
                book.coverImage ||
                'https://via.placeholder.com/240x350.png?text=No+Cover'
            }" alt="–û–±–ª–æ–∂–∫–∞ –∫–Ω–∏–≥–∏ ${book.title}" class="book-cover">`;
        }

        // –°–æ–±–∏—Ä–∞–µ–º –ø–æ–ª–Ω—É—é –∫–∞—Ä—Ç–æ—á–∫—É –¥–ª—è –∫–Ω–∏–≥–∏ –∏–∑ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
        let cardContent = `
            ${locationBadge}
            ${coverHtml}
            <div class="book-info">
                <h2 class="book-title">${book.title}</h2>
                <p class="book-author">${book.author}</p>
                <div class="book-meta">
                    <span class="book-rating">‚≠ê ${
                        book.rating?.overall || ''
                    }</span>
                    <span class="book-status">${
                        book.status ? translateStatus(book.status) : ''
                    }</span>
                </div>
            </div>
        `;

        // –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞ –¥–ª—è —Å–ø–∏—Å–∫–∞ –∂–µ–ª–∞–Ω–∏–π
        if (listType === 'wishlist') {
            cardContent = `
                <div class="book-info wishlist-info">
                    <h2 class="book-title">${book.title}</h2>
                    <p class="book-author">${book.author}</p>
                </div>
            `;
        }

        bookCard.innerHTML = cardContent;
        bookCard.addEventListener('click', () => {
            showDetailModal(book.id, listType);
        });
        bookListContainer.appendChild(bookCard);
    });
}

/**
 * –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ —Å—Ç–∞—Ç—É—Å–∞ –Ω–∞ —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫.
 * @param {string} status - –°—Ç–∞—Ç—É—Å –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º ('read', 'to-read', 'reading').
 * @returns {string} –ü–µ—Ä–µ–≤–µ–¥–µ–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å.
 */
function translateStatus(status) {
    const statuses = {
        read: '–ü—Ä–æ—á–∏—Ç–∞–Ω–∞',
        'to-read': '–•–æ—á—É –ø—Ä–æ—á–∏—Ç–∞—Ç—å',
        reading: '–ß–∏—Ç–∞—é',
    };
    return statuses[status] || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
}
